#!/bin/bash

# vars
DOCKER_USER=$1
DOCKER_PASS=$2

# starting state
STATE='checkEth0'

function checkEth0 {
    eth_on=$(cat /sys/class/net/eth0/operstate | grep -c up)
    ppp_on=$(route -n | grep -c ^0.0.0.0.*ppp0)
    if [ $eth_on -eq 1 ] && [ $ppp_on -eq 1 ]; then
        route del default ppp0
        echo "deleted ppp0 route"
        STATE='changeDNS'
    else
        echo "No Eth0 available, trying GSM..."
        STATE='checkGSM'
    fi
}

function checkGSM {
    modem_set=$(lsusb | grep -c 12d1:1001.*Modem)
    if [ $modem_set -eq 0 ]; then
        echo -e "[Dialer Defaults]\nInit1 = ATZ\nInit2 = ATE1\nInit3 = AT+CGDCONT=1,\"IP\",\"soracom.io\"\nDial Attempts = 3\nStupid Mode = 1\nModem Type = Analog Modem\nDial Command = ATD\nStupid Mode = 1\nBaud = 460800\nNew PPPD = yes\nModem = /dev/ttyUSB0\nISDN = 0\nAPN = soracom.io\nPhone = *99***1#\nUsername = sora\nPassword = sora\nCarrier Check = no\nAuto DNS = no\nCheck Def Route = 1" > /etc/wvdial.conf
        echo -e "noauth\nname wvdial" >  /etc/ppp/peers/wvdial
        usb_modeswitch -v 0x12d1 -p 0x1f01 -V 0x12d1 -P 0x1f01 -M "55534243123456780000000000000011062000000100000000000000000000"
        echo "GSM file settings done"
    fi

    ppp_on=$(route -n | grep -c ^0.0.0.0.*ppp0)
    if [ $ppp_on -eq 0 ]; then
        wvdial &
        sleep 30
        route add default ppp0
        STATE='changeDNS'
        echo "connected to GSM"
    else
        echo "No GSM connection available. Going to sleep..."
        STATE='doSleep'
    fi
}

function changeDNS {
    echo -e "nameserver 8.8.8.8\nameserver 8.8.4.4" > /etc/resolv.conf
    STATE='disableSerial'
}

function disableSerial {
    [[ -f /usr/bin/rpi-serial-console ]] && echo "Already has rpi-serial-console" || wget --no-cache --quiet https://raw.githubusercontent.com/virtusai/rpi-serial-console/master/rpi-serial-console -O /usr/bin/rpi-serial-console
    chmod +x /usr/bin/rpi-serial-console
    /usr/bin/rpi-serial-console disable
    STATE='createFolders'
    echo "Done serial processing..."
}

function createFolders {
    mkdir -p /home/pirate/docker-manager/store && mkdir /data
    STATE='dockerStart'
    echo "Done folder structure..."
}

function dockerStart {
    docker_on=$(docker ps | grep -c docker-manager)

    if [ $docker_on -eq 0 ]; then
        echo "Starting docker-manager"
        docker login -u $DOCKER_USER -p $DOCKER_PASS ci.virtusai.me:5001
        sleep 20
        docker pull ci.virtusai.me:5001/gateway_dockermanager:latest
        sleep 20
        docker run -d --net=host --privileged -v /var/run/docker.sock:/var/run/docker.sock -v /home/pirate/docker-manager/store:/usr/src/app/store -v /data:/data --name=docker-manager --rm ci.virtusai.me:5001/gateway_dockermanager:latest
    else
        echo "docker-manager is already up"
    fi

    STATE='doSleep'
}

function doSleep {
    echo "Going to sleep for new cycle..."
    sleep 5
    STATE='checkEth0'
}

function preExit {
    echo "Exiting script.."
}

function main {
    while true
    do
        $STATE
        sleep 5
    done
}

# Well Behaved Exit
trap preExit EXIT
# call mainLoop
main